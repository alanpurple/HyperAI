definitions:
  VisionTask:
    description: use only when taskType is 'vision'
    type: object
    properties:
      name:
        type: string
        example: Vision task name
      taskType:
        type: string
        enum: ['preprocessing', 'segmentation', 'classification', 'detection' ]
        required: true
      includeMask:
        type: boolean
      completed:
        type: boolean
      preprocessed:
        description: output folder, only for preprocessing task
        type: string
        example: /preprocessing/output/folder
  TextTask:
    description: use only when taskType is 'text'
    type: object
    properties:
      name:
        type: string
  StructuralTask:
    type: object
    properties:
      name:
        type: string
      taskType:
        type: string
        enum: [ 'recommendation', 'clustering', 'classification', 'regression' ]
        required: true
  Project:
    type: object
    properties:
      _id:
        type: string
        description: ObjectId of project
        readOnly: true
      name:
        type: string
        example: Example project
        required: true
      dataURI:
        type: string
        required: true
      projectType:
        type: string
        enum: ['single', 'multiple', 'multiple_comparison']
      taskType:
        type: string
        enum: ['various', 'vision', 'text', 'structural']
      owner:
        type: string
        description: ObjectId of project owner
        required: true
      members:
        description: one and only owner, others are all attendee(for now)
        type: array
        items:
          type: object
          properties:
            user:
              type: string
              description: Current user's ObjectId
              example: 616e7f034f3bbb2ef4a87ce3
            role:
              type: string
              enum: ['attendee', 'member']
          required: true
      visionTasks:
        type: array
        items:
          $ref: '#/definitions/VisionTask'
      textTasks:
        type: array
        items:
          $ref: '#/definitions/TextTask'
      structuralTasks:
        type: array
        items:
          $ref: '#/definitions/StructuralTask'
      createdAt:
        type: date-time
        readOnly: true
        example: "2021-10-27T07:14:57.087Z"
      updatedAt:
        type: date-time
        readOnly: true
        example: "2021-10-27T07:14:57.087Z"
paths:
  /project:
    get:
      tags:
        - Project
      summary: Retrieve a list of projects
      description: Retrieve a list of projects from db.
      responses:
        200:
          description: A list of projects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/Project'
        204:
          description: No project found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 204
                  message:
                    type: string
                    example: No project found.
                  data:
                    type: object
    post:
      tags:
        - Project
      summary: New project
      description: Add a new project to db.
      produces:
        - application/json
      requestBody:
        description: "Note: Property '_id' does not need"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Project'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: Created
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/Project'
        400:
          description: Project name already in use.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: Project name already in use.
                  data:
                    type: object
    delete:
      tags:
        - Project
      summary: Delete projects
      description: Delete selected projects.
      produces:
        - application/json
      requestBody:
        description: \'name\'s of selected projects
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  items:
                    type: string
                  uniqueItems: true
                  example: ["My Project 01", "My Project 02", "My Project 03"]
      responses:
        200:
          description: deletedCount
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 3
        404:
          description: No project was deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: No project was deleted.
                  data:
                    type: object
  /project/{name}:
    get:
      tags:
        - Project
      summary: Retrieve a project
      description: Retrieve a project from db.
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          description: path parameter takes the project name
          required: true
          type: string
      responses:
        200:
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: '#/definitions/Project'
        404:
          description: A project with the specified name was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: A project with the specified ID was not found.
                  data:
                    type: object
    put:
      tags:
        - Project
      summary: Modify a project
      description: Modify a project.
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          description: path parameter takes the project name
          required: true
          type: string
      requestBody:
        description: project properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Project'
      responses:
        200:
          description: A modified project
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: Created
                  data:
                    $ref: '#/definitions/Project'
        404:
          description: No project was modified. (A project with the specified ID was not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: No project was modified.
                  data:
                    type: object
    delete:
      tags:
        - Project
      summary: Delete a project
      description: Delete a project.
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          description: path parameter takes the project name
          required: true
          type: string
      responses:
        200:
          description: A deleted project
          content:
            application/json:
              schema:
                $ref: '#/definitions/Project'
        404:
          description: No project was deleted. (A project with the specified name was not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: No project was deleted.
                  data:
                    type: object